name: Build and deploy .NET application to container app mg-coffee-api
on:
  push:
    branches:
    - main
# Permission to support Azure login using OIDC
permissions:
  id-token: write
env:
  CONTAINER_APP_CONTAINER_NAME: mg-main-container
  CONTAINER_APP_NAME: mg-envoygateway
  CONTAINER_APP_RESOURCE_GROUP_NAME: MelloGee
  CONTAINER_REGISTRY_LOGIN_SERVER: registry.hub.docker.com
  DOCKER_FILE_PATH: Gateways/Envoy/Dockerfile
  PROJECT_NAME_FOR_DOCKER: mg-envoygateway
  CONTAINER_APPS_ENVIRONMENT: mg-container-env
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout to the branch
      uses: actions/checkout@v3
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Login to Docker Hub container registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
      name: Build and push image to Docker Hub registry
      uses: docker/build-push-action@v2
      with:
        push: true 
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
        file: ${{ env.DOCKER_FILE_PATH }}
  deploy:
    runs-on: ubuntu-latest
    # Set Git Environments
    environment: dev
    needs: build
    steps:
# Login to Azure using OIDC
# https://colinsalmcorner.com/actions-authenticate-to-azure-without-a-secret/ 
    # ubuntu Az CLI installation 
    - name: Install CLI-beta
      run: |
        cd ../..
        CWD="$(pwd)"
        python3 -m venv oidc-venv
        . oidc-venv/bin/activate
        echo "activated environment" 
        python3 -m pip install --upgrade pip
        echo "started installing cli beta" 
        pip install -q --extra-index-url https://azcliprod.blob.core.windows.net/beta/simple/ azure-cli
        echo "installed cli beta"    
        echo "$CWD/oidc-venv/bin" >> $GITHUB_PATH   
    - name: 'Az CLI login'
      uses: azure/login@v1.4.0
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: Deploy to Azure Container App
      uses: azure/CLI@v1
      with:
        inlineScript: >
          az config set extension.use_dynamic_install=yes_without_prompt

          az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} 

          az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME_FOR_DOCKER }}:${{ github.sha }}
    - name: logout
      run: >
        az logout
